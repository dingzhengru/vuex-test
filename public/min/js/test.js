"use strict";var myPlugin=function(t){console.log("myPlugin: store init"),t.subscribe(function(t,n){console.log("myPlugin: mutation被調用\n","mutation:"+JSON.stringify(t)+"\n","state: "+JSON.stringify(n))})},store=new Vuex.Store({state:{count:0,todos:[{id:1,text:"todos1",done:!0},{id:2,text:"todos2",done:!1},{id:3,text:"todos3",done:!0}],msg:"defaultMsg"},getters:{doneTodos:function(t){return t.todos.filter(function(t){return t.done})},doneTodosLen:function(t,n){return n.doneTodos.length},getTodoById:function(t){return function(n){return t.todos.find(function(t){return t.id===n})}}},mutations:{increment:function(t){t.count++},myEvent:function(t,n){t.msg="myEvent, "+JSON.stringify(n)},myEvent2:function(t,n){t.msg="myEvent2, payload.type:"+n.type+", payload.amount:"+n.amount}},actions:{myEventAsync:function(t,n){t.commit("myEvent",n)},actionA:function(t){var e=t.commit;return new Promise(function(t,n){setTimeout(function(){e("someMutation"),t()},1e3)})}},plugins:[myPlugin]}),app=new Vue({el:"#app",data:{},methods:{commitIncrement:function(){return store.commit("increment"),store.count}}}),Counter={template:"<div>{{ count }}</div>",computed:{count:function(){return this.$store.state.count}}},app1=new Vue({el:"#app1",store:store,components:{Counter:Counter}}),app2=new Vue({el:"#app2",store:store,computed:{doneTodosLen:function(){return this.$store.getters.doneTodosLen}}}),app3=new Vue({el:"#app3",store:store}),app4=new Vue({el:"#app4",store:store}),app5=new Vue({el:"#app5",store:store}),app6=new Vue({el:"#app6",store:store});